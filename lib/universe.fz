# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature universe
#
# -----------------------------------------------------------------------


#
# universe is the mother and father of all features.
# As such it is the outermost feature.
#
# Universe can not be called but you can use in a
# call as part of a full qualifier, e.g.:
#
# `universe.this.say "hello"`
#


# is `e` contained in `Set` `s`?
#
# This should usually be called using type inference as in
#
#   my_set := set_of ["A","B","C"]
#   say ("B" ∈ my_set)
#   say ("D" ∈ my_set)
#
public infix ∈ (T type : property.equatable, e T, s container.Set T) => s.contains e


# is `e` not contained in `Set` `s`?
#
# This should usually be called using type inference as in
#
#   my_set := set_of ["A","B","C"]
#   say ("B" ∉ my_set)
#   say ("D" ∉ my_set)
#
public infix ∉ (T type : property.equatable, e T, s container.Set T) => !(e ∈ s)
