# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature container.Mutable_Array
#
# -----------------------------------------------------------------------


# an interface defining a mutable array
#
# NYI: Remove Sequence parent. Since Sequence is supposed to be immutable,
# we should maybe not pretend to be a Sequence.
#
public Mutable_Array(public T type) ref : Sequence T is

  # add an element at the end of the sequence
  public add(t T) unit => abstract

  # set element at index i to o
  public set [ ] (i i32, o T) unit => abstract

  # the indices of the array
  public indices interval i32 => abstract

  # the length of the array
  public length i32 => abstract


  # is this Sequence known to be array backed? If so, this means that operations
  # like index[] are fast.
  #
  public redef is_array_backed => true


  # count the number of elements in this Sequence.
  #
  # Since we know the exact length, this is redefined to achive O(1) performance instead
  # of O(n) for counting the elements.
  #
  public redef count => length
