# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test ctrie_threads
#
#  Author: Michael Lill (michael.lill@tokiwa.software)
#
# -----------------------------------------------------------------------

ctrie_threads is

  ctrie := (container.C_Trie i32 i32).type.empty

  num_threads := 10
  keys := 1..999

  for t in 1..num_threads do
    concur.thread.spawn ()->
      for k in keys
          snap := ctrie, if k=500 then ctrie.snapshot true else snap
      do
        ctrie.add k t
        if k % 3 = 0
          ctrie.remove k

      else
        # NYI snapshots do not work yet
        # say "snapshot size is: {snap.size}"


  # NYI can not wait for threads to finish currently
  time.nano.sleep (time.durations.s 5)

  say ctrie.size # the number of the beast = 666

  say (ctrie.lookup 1).exists
  say (ctrie.lookup 2).exists
  say (ctrie.lookup 3).is_nil
  say (ctrie.lookup 997).exists
  say (ctrie.lookup 998).exists
  say (ctrie.lookup 999).is_nil

  if ((envir.args.nth 1).get "")="-debug"
    say "==="
    say (ctrie.items.map_sequence x->"{x.values.0} was inserted by thread {x.values.1}")
    say "==="
    say ((ctrie.items.map_sequence x->x.values.1).group_by x->x)
